// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  phoneNumber String?
  type String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes String[] @db.ObjectId

  accounts Account[]
  listings Listing[]
  contactedListings ContactedListing[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  providerType String
  providerId String
  providerAccountId String
  refreshToken String?
  accessToken String?
  accessTokenExpires DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerId, providerAccountId])
}

model Listing {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  title String
  description String
  image String
  price String
  address String
  type String
  furnishStatus String
  propertySqft String
  bedroomCount Int
  bathroomCount Int
  balconyCount Int
  availableFor String[]
  maintenanceFee Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  contactedListings ContactedListing[]
}

model ContactedListing {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  listingId String @db.ObjectId
  name String
  email String
  phoneNumber String?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}